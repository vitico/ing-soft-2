// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator dbml {
  provider            = "prisma-dbml-generator"
  outputName          = "punto9.dbml"
  projectName         = "punto 9 - industria textil"
  projectDatabaseType = "PostgreSQL"
  //https://dbdiagram.io/d
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@lab.vitico.space:31132/ingsoft?schema=punto9"
}

model Ayuntamiento {
  id          Int       @id @default(autoincrement())
  nombre      String
  municipioId Int
  Letrero     Letrero[]
  Municipio   Municipio @relation(fields: [municipioId], references: [id])
}

model Letrero {
  id             Int            @id @default(autoincrement())
  tamano         Float
  ayuntamientoId Int
  ayuntamiento   Ayuntamiento   @relation(fields: [ayuntamientoId], references: [id])
  Calle          Calle?         @relation(fields: [calleId], references: [id])
  calleId        Int?
  PagoLetrero    PagoLetrero[]
  material       MaterialUnidad @relation(fields: [materialUnidadId], references: [id])
  dueno          Tercero        @relation(fields: [terceroId], references: [id])
  terceroId      Int

  materialUnidadId Int
}

model Material {
  id             Int              @id @default(autoincrement())
  nombre         String
  MaterialUnidad MaterialUnidad[]
}

model MaterialUnidad {
  id         Int       @id @default(autoincrement())
  material   Material  @relation(fields: [materialId], references: [id])
  unidad     Unidad    @relation(fields: [unidadId], references: [id])
  materialId Int
  unidadId   Int
  costo      Float
  Letrero    Letrero[]
}

model Unidad {
  id         Int    @id @default(autoincrement())
  nombre     String
  referencia Float
  unidadId   Int?

  Unidad         Unidad?          @relation("unidad", fields: [unidadId], references: [id])
  Unidades       Unidad[]         @relation("unidad")
  MaterialUnidad MaterialUnidad[]
}

model Calle {
  id         Int    @id @default(autoincrement())
  nombre     String
  referencia Float
  calleId    Int?

  Calle                     Calle?     @relation("calle", fields: [calleId], references: [id])
  Calles                    Calle[]    @relation("calle")
  Letrero                   Letrero[]
  Municipio                 Municipio? @relation(fields: [municipioId], references: [id])
  municipioId               Int?
  variacionPrecioFijo       Float
  variacionPrecioPorcentual Float

}

// pais -> provincia -> municipio -> calle, sector
model Pais {
  id     Int    @id @default(autoincrement())
  nombre String

  Provincia Provincia[]
}

model Provincia {
  id        Int         @id @default(autoincrement())
  nombre    String
  paisId    Int
  Municipio Municipio[]

  Pais Pais @relation(fields: [paisId], references: [id])
}

model Municipio {
  id           Int            @id @default(autoincrement())
  nombre       String
  provinciaId  Int
  Calle        Calle[]
  Ayuntamiento Ayuntamiento[]

  Provincia                 Provincia @relation(fields: [provinciaId], references: [id])
  variacionPrecioFijo       Float
  variacionPrecioPorcentual Float
}

model Tercero {
  id     Int    @id @default(autoincrement())
  nombre String

  PagoLetrero PagoLetrero[]
  Letrero     Letrero[]
}

enum EstadoPago {
  PENDIENTE
  PAGADO
  CANCELADO
}

model PagoLetrero {
  id        Int        @id @default(autoincrement())
  Letrero   Letrero    @relation(fields: [letreroId], references: [id])
  Tercero   Tercero    @relation(fields: [terceroId], references: [id])
  precio    Float
  estado    EstadoPago
  letreroId Int
  terceroId Int
}
