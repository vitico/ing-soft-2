// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator dbml {
  provider            = "prisma-dbml-generator"
  outputName          = "punto2.dbml"
  projectName         = "punto 2 - sistema de quejas"
  projectDatabaseType = "PostgreSQL"
  //https://dbdiagram.io/d
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@lab.vitico.space:31132/ingsoft?schema=punto2"
}

model Tercero {
  id                 Int                  @id
  nombre             String
  apellido           String
  dni                String
  TerceroVsContacto  TerceroVsContacto[]
  TerceroVsDireccion TerceroVsDireccion[]
  Cliente            Cliente?             @relation(name: "cliente_tercero")
  Trabajador         Trabajador?          @relation("trabajador_tercero")
}

model Contacto {
  id                Int                 @id
  Valor             String
  TipoContacto      TipoContacto?       @relation(fields: [tipoContactoId], references: [id])
  tipoContactoId    Int?
  TerceroVsContacto TerceroVsContacto[]
}

model TipoContacto {
  id     Int    @id
  nombre String

  contactos Contacto[]
}

model TerceroVsContacto {
  id         Int      @id
  tercero    Tercero  @relation(fields: [terceroId], references: [id])
  contacto   Contacto @relation(fields: [contactoId], references: [id])
  terceroId  Int
  contactoId Int
}

model Direccion {
  id                 Int                  @id
  calle              String
  numero             String
  piso               String
  departamento       String
  localidad          String
  provincia          String
  pais               String
  TerceroVsDireccion TerceroVsDireccion[]
}

model TerceroVsDireccion {
  id          Int       @id
  tercero     Tercero   @relation(fields: [terceroId], references: [id])
  direccion   Direccion @relation(fields: [direccionId], references: [id])
  terceroId   Int
  direccionId Int
}

model Cliente {
  idTercero Int     @id
  tercero   Tercero @relation("cliente_tercero", fields: [terceroId], references: [id])
  Queja     Queja[]
  terceroId Int     @unique
}

model Trabajador {
  idTercero       Int               @id
  tercero         Tercero           @relation("trabajador_tercero", fields: [terceroId], references: [id])
  terceroId       Int               @unique
  MovimientoQueja MovimientoQueja[]
}

model Queja {
  id               Int               @id
  nombre           String
  descripcion      String
  fechaQueja       DateTime
  fechaResolucion  DateTime
  cliente          Cliente           @relation(fields: [clienteIdTercero], references: [idTercero])
  clienteIdTercero Int
  estado           Estado
  MovimientoQueja  MovimientoQueja[]

  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
}

enum Estado {
  PENDIENTE
  RESUELTA
}

model Categoria {
  id     Int        @id
  nombre String
  padre  Categoria? @relation("categoria_padre", fields: [categoriaId], references: [id])

  Categoria   Categoria[] @relation("categoria_padre")
  categoriaId Int?
  Queja       Queja[]
}

model MovimientoQueja {
  id          Int      @id
  fecha       DateTime
  descripcion String
  Queja       Queja    @relation(fields: [quejaId], references: [id])
  quejaId     Int
  Estado      Estado

  realizadoPor        Trabajador @relation(fields: [trabajadorIdTercero], references: [idTercero])
  trabajadorIdTercero Int
}
